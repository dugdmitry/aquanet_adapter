// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: navreport.proto

#include "navreport.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

class NavigationReportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NavigationReport>
      _instance;
} _NavigationReport_default_instance_;
namespace protobuf_navreport_2eproto {
static void InitDefaultsNavigationReport() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_NavigationReport_default_instance_;
    new (ptr) ::NavigationReport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NavigationReport::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NavigationReport =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNavigationReport}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_NavigationReport.base);
}

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NavigationReport, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NavigationReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NavigationReport, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NavigationReport, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NavigationReport, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NavigationReport, veh_class_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NavigationReport, battery_ok_),
  0,
  1,
  2,
  4,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::NavigationReport)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_NavigationReport_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "navreport.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017navreport.proto\032\034dccl/option_extension"
      "s.proto\"\374\001\n\020NavigationReport\022\"\n\001x\030\001 \002(\001B"
      "\027\242\?\024 \001)\000\000\000\000\000\210\303\3001\000\000\000\000\000\210\303@\022\"\n\001y\030\002 \002(\001B\027\242\?\024"
      " \001)\000\000\000\000\000\210\303\3001\000\000\000\000\000\210\303@\022\"\n\001z\030\003 \002(\001B\027\242\?\024 \000)\000"
      "\000\000\000\000\210\263\3001\000\000\000\000\000\000\000\000\0221\n\tveh_class\030\004 \001(\0162\036.Na"
      "vigationReport.VehicleClass\022\022\n\nbattery_o"
      "k\030\005 \001(\010\"*\n\014VehicleClass\022\007\n\003AUV\020\001\022\007\n\003USV\020"
      "\002\022\010\n\004SHIP\020\003:\t\242\?\006\010|\020 (\003"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 302);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "navreport.proto", &protobuf_RegisterTypes);
  ::protobuf_dccl_2foption_5fextensions_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_navreport_2eproto
const ::google::protobuf::EnumDescriptor* NavigationReport_VehicleClass_descriptor() {
  protobuf_navreport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_navreport_2eproto::file_level_enum_descriptors[0];
}
bool NavigationReport_VehicleClass_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NavigationReport_VehicleClass NavigationReport::AUV;
const NavigationReport_VehicleClass NavigationReport::USV;
const NavigationReport_VehicleClass NavigationReport::SHIP;
const NavigationReport_VehicleClass NavigationReport::VehicleClass_MIN;
const NavigationReport_VehicleClass NavigationReport::VehicleClass_MAX;
const int NavigationReport::VehicleClass_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void NavigationReport::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NavigationReport::kXFieldNumber;
const int NavigationReport::kYFieldNumber;
const int NavigationReport::kZFieldNumber;
const int NavigationReport::kVehClassFieldNumber;
const int NavigationReport::kBatteryOkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NavigationReport::NavigationReport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_navreport_2eproto::scc_info_NavigationReport.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:NavigationReport)
}
NavigationReport::NavigationReport(const NavigationReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&veh_class_) -
    reinterpret_cast<char*>(&x_)) + sizeof(veh_class_));
  // @@protoc_insertion_point(copy_constructor:NavigationReport)
}

void NavigationReport::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&battery_ok_) -
      reinterpret_cast<char*>(&x_)) + sizeof(battery_ok_));
  veh_class_ = 1;
}

NavigationReport::~NavigationReport() {
  // @@protoc_insertion_point(destructor:NavigationReport)
  SharedDtor();
}

void NavigationReport::SharedDtor() {
}

void NavigationReport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NavigationReport::descriptor() {
  ::protobuf_navreport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_navreport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NavigationReport& NavigationReport::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_navreport_2eproto::scc_info_NavigationReport.base);
  return *internal_default_instance();
}


void NavigationReport::Clear() {
// @@protoc_insertion_point(message_clear_start:NavigationReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&battery_ok_) -
        reinterpret_cast<char*>(&x_)) + sizeof(battery_ok_));
    veh_class_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NavigationReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NavigationReport)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 1 [(.dccl.field) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double y = 2 [(.dccl.field) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double z = 3 [(.dccl.field) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .NavigationReport.VehicleClass veh_class = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::NavigationReport_VehicleClass_IsValid(value)) {
            set_veh_class(static_cast< ::NavigationReport_VehicleClass >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool battery_ok = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_battery_ok();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &battery_ok_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NavigationReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NavigationReport)
  return false;
#undef DO_
}

void NavigationReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NavigationReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double x = 1 [(.dccl.field) = {
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // required double y = 2 [(.dccl.field) = {
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // required double z = 3 [(.dccl.field) = {
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  // optional .NavigationReport.VehicleClass veh_class = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->veh_class(), output);
  }

  // optional bool battery_ok = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->battery_ok(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:NavigationReport)
}

::google::protobuf::uint8* NavigationReport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NavigationReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double x = 1 [(.dccl.field) = {
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // required double y = 2 [(.dccl.field) = {
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // required double z = 3 [(.dccl.field) = {
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  // optional .NavigationReport.VehicleClass veh_class = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->veh_class(), target);
  }

  // optional bool battery_ok = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->battery_ok(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NavigationReport)
  return target;
}

size_t NavigationReport::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:NavigationReport)
  size_t total_size = 0;

  if (has_x()) {
    // required double x = 1 [(.dccl.field) = {
    total_size += 1 + 8;
  }

  if (has_y()) {
    // required double y = 2 [(.dccl.field) = {
    total_size += 1 + 8;
  }

  if (has_z()) {
    // required double z = 3 [(.dccl.field) = {
    total_size += 1 + 8;
  }

  return total_size;
}
size_t NavigationReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NavigationReport)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required double x = 1 [(.dccl.field) = {
    total_size += 1 + 8;

    // required double y = 2 [(.dccl.field) = {
    total_size += 1 + 8;

    // required double z = 3 [(.dccl.field) = {
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 24u) {
    // optional bool battery_ok = 5;
    if (has_battery_ok()) {
      total_size += 1 + 1;
    }

    // optional .NavigationReport.VehicleClass veh_class = 4;
    if (has_veh_class()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->veh_class());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NavigationReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NavigationReport)
  GOOGLE_DCHECK_NE(&from, this);
  const NavigationReport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NavigationReport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NavigationReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NavigationReport)
    MergeFrom(*source);
  }
}

void NavigationReport::MergeFrom(const NavigationReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NavigationReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    if (cached_has_bits & 0x00000008u) {
      battery_ok_ = from.battery_ok_;
    }
    if (cached_has_bits & 0x00000010u) {
      veh_class_ = from.veh_class_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NavigationReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NavigationReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NavigationReport::CopyFrom(const NavigationReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NavigationReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NavigationReport::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void NavigationReport::Swap(NavigationReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NavigationReport::InternalSwap(NavigationReport* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(battery_ok_, other->battery_ok_);
  swap(veh_class_, other->veh_class_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NavigationReport::GetMetadata() const {
  protobuf_navreport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_navreport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::NavigationReport* Arena::CreateMaybeMessage< ::NavigationReport >(Arena* arena) {
  return Arena::CreateInternal< ::NavigationReport >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
